"0","#getting participant count by census tract"
"0","participants_count <- data.frame(data.table(participants)[, .N, by = GEOID]) "
"0","participants_poly <- merge(participants_count, "
"0","                           stl_value[, c(""GEOID"", ""NAME"", ""geometry"")], by = ""GEOID"", all = TRUE)"
"0","participants_poly <- participants_poly[!duplicated(participants_poly),]"
"0","participants_poly[is.na(participants_poly)] <- 0"
"0","participants_poly <- st_as_sf(participants_poly)"
"0",""
"0","p1 <- ggplot(stl_value[stl_value$variable == ""population"",]) + "
"0","  aes(fill = estimate) + geom_sf() +"
"0","  xlim(c(-90.32, -90.175)) + ylim(c(38.54, 38.77)) + theme_void() +"
"0","  theme(legend.position = ""bottom"")  + "
"0","  ggtitle(""St. Louis City Population Distribution"")"
"0",""
"0","p2 <- ggplot(participants_poly) + "
"0","  aes(fill = N) + geom_sf() +"
"0","  xlim(c(-90.32, -90.175)) + ylim(c(38.54, 38.77)) + theme_void() +"
"0","  geom_point(data = participants, aes(x = lon, y = lat, fill = 1), colour = ""white"") +"
"0","  theme(legend.position = ""bottom"")  + "
"0","  ggtitle(""St. Louis City Sample Distribution"")"
"0",""
"0","grid.arrange(p1, p2, nrow = 1)"
